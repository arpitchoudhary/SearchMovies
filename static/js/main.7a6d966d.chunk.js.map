{"version":3,"sources":["component/footer.module.css","APIKey.js","component/layout/loading.gif","component/layout/Navbar.js","component/layout/Footer.js","actions/types.js","actions/searchActions.js","component/home/SearchForm.js","component/layout/Error.js","component/home/MovieCard.js","component/home/MovieContainer.js","component/layout/Spinner.js","component/home/Landing.js","component/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","href","id","Footer","styles","footer","p","target","rel","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","Error","MovieCard","movie","src","Poster","alt","Title","Year","to","imdbID","MovieContainer","content","errorContent","Response","Search","map","index","key","Spinner","loading","style","width","margin","display","Landing","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7a6d966d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__3QDqv\",\"p\":\"footer_p__31pUq\",\"bottomright\":\"footer_bottomright__17RJI\",\"linkedin-logo\":\"footer_linkedin-logo__39cUQ\"};","module.exports = {\n    APIKey: 'b89353fb'\n  };","module.exports = __webpack_public_path__ + \"static/media/loading.12c2e1df.gif\";","import React from 'react'\n\nfunction Navbar() {\n    return (\n        <div>\n            <nav className=\"navbar navbar-light bg-dark mb-5\">\n\n                <div className=\"container\">\n                    <div className=\"navbar-header\">\n                        <a className=\"navbar-brand text-white text-lg brand-text\" href=\"# \">\n                            MoviesInfo\n                        </a>\n                    </div>\n\n                    <ul className = \"navbar-nav ml-auto text-light d-inline-block\">\n                        <li className=\"nav-item d-inline-block mr-4\">\n                            <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\"/>\n                        </li>\n                        <li className=\"nav-item d-inline-block mr-4\">\n                            <i className=\"fab fa-react fa-5x\" id=\"react-logo\"/>\n                        </li>\n                    </ul>\n\n                </div>\n\n            </nav>\n\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport styles from '../footer.module.css';\n\nexport default function Footer() {\n    return (\n        <div className={styles.footer}>\n            <p className={styles.p}>Developed By Arpit Choudhary</p>\n            <div>\n                <a href=\"https://www.linkedin.com/in/arpitchoudhary90/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\" id=\"linked-logo\"></i>\n                </a>\n            </div>\n        </div>\n    )\n}\n","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\nexport const LOADING = 'LOADING';","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\nimport axios from 'axios';\n\nimport { APIKey } from '../APIKey';\n\nexport const searchMovie = text => dispatch => {\n  dispatch({\n    type: SEARCH_MOVIE,\n    payload: text\n  });\n};\n\nexport const fetchMovies = text => dispatch => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\n    .then(response =>\n      dispatch({\n        type: FETCH_MOVIES,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovie = id => dispatch => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\n    .then(response =>\n      dispatch({\n        type: FETCH_MOVIE,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n\nexport const setLoading = () => {\n  return {\n    type: LOADING\n  };\n};","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport {\n  searchMovie,\n  fetchMovies,\n  setLoading\n} from '../../actions/searchActions';\n\nexport class SearchForm extends Component {\n  onChange = e => {\n    this.props.searchMovie(e.target.value);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.fetchMovies(this.props.text);\n    this.props.setLoading();\n  };\n\n  render() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\n        <div className=\"container\">\n          <h1 className=\"display-4 mb-3\">\n            <i className=\"fa fa-search\" /> Search for a movie ,TV series ..\n          </h1>\n          <form id=\"searchForm\" onSubmit={this.onSubmit}>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"searchText\"\n              placeholder=\"Search Movies, TV Series ...\"\n              onChange={this.onChange}\n            />\n            <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  text: state.movies.text\n});\n\nexport default connect(\n  mapStateToProps,\n  { searchMovie, fetchMovies, setLoading }\n)(SearchForm);","import React from 'react'\n\nexport default function Error() {\n    return (\n        <div>\n            <p>No Result found</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class MovieCard extends Component {\n  render() {\n    const { movie } = this.props;\n    return (\n      <div className=\"col-md-3 mb-5\">\n        <div className=\"card card-body bg-dark text-center h-100\">\n          <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\n          <h5 className=\"text-light card-title\">\n            {movie.Title} - {movie.Year}\n          </h5>\n          <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\n            Read More\n              <i className=\"fas fa-chevron-right\" />\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Error from '../layout/Error'\nimport MovieCard from './MovieCard';\n\nexport class MovieContainer extends Component {\n  render() {\n    const { movies } = this.props;\n    let content = '';\n    let errorContent = '';\n\n    errorContent =\n      movies.Response === 'False' ? <Error></Error> : null;\n\n    content =\n      movies.Response === 'True'\n        ? movies.Search.map((movie, index) => (\n          <MovieCard key={index} movie={movie} />\n        ))\n        : null;\n\n    return <div className=\"row\">{content}{errorContent}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  movies: state.movies.movies\n});\n\nexport default connect(mapStateToProps)(MovieContainer);","import React from 'react'\nimport loading from './loading.gif'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img src= {loading}\n            style={{width:'200px', margin :'auto', display:'block'}}\n            alt = \" Loading Results.... \"\n            />\n        </div>\n    )\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport SearchForm from './SearchForm';\nimport MovieContainer from './MovieContainer';\nimport Spinner from '../layout/Spinner';\n\nexport class Landing extends Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <div className=\"container\">\n        <SearchForm />\n        {loading ? <Spinner /> : <MovieContainer />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.movies.loading\n});\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchMovie, setLoading } from '../../actions/searchActions';\n\nimport Spinner from '../layout/Spinner';\n\nexport class Movie extends Component {\n    componentDidMount() {\n        this.props.fetchMovie(this.props.match.params.id);\n        this.props.setLoading();\n    }\n    render() {\n        const { loading, movie } = this.props;\n\n        let movieInfo = (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 card card-body\">\n                        <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <h2 className=\"mb-4\">{movie.Title}</h2>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">\n                                <strong>Genre:</strong> {movie.Genre}\n                            </li>\n                            <li className=\"list-group-item\">\n                                <strong>Released:</strong> {movie.Released}\n                            </li>\n                            <li className=\"list-group-item\">\n                                <strong>Rated:</strong> {movie.Rated}\n                            </li>\n                            <li className=\"list-group-item\">\n                                <strong>IMDB Rating:</strong> {movie.imdbRating}\n                            </li>\n                            <li className=\"list-group-item\">\n                                <strong>Director:</strong> {movie.Director}\n                            </li>\n                            <li className=\"list-group-item\">\n                                <strong>Writer:</strong> {movie.Writer}\n                            </li>\n                            <li className=\"list-group-item\">\n                                <strong>Actors:</strong> {movie.Actors}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"card card-body bg-dark my-5 text-light\">\n                        <div className=\"col-md-12\">\n                            <h3>About </h3>\n                            {movie.Plot}\n                            <hr />\n                            <a\n                                href={'https://www.imdb.com/title/' + movie.imdbID}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"btn btn-primary\"\n                            >\n                                View on IMDB\n              </a>\n                            <Link to=\"/\" className=\"btn btn-default text-light\">\n                                Go Back To Search\n              </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n\n        let content = loading ? <Spinner /> : movieInfo;\n        return <div>{content}</div>;\n    }\n}\n\nconst mapStateToProps = state => ({\n    loading: state.movies.loading,\n    movie: state.movies.movie\n});\n\nexport default connect(\n    mapStateToProps,\n    { fetchMovie, setLoading }\n)(Movie);\n","\nimport {\n    SEARCH_MOVIE,\n    FETCH_MOVIES,\n    FETCH_MOVIE,\n    LOADING\n} from '../actions/types';\n\nconst initialState = {\n    text: '',\n    movies: [],\n    loading: false,\n    movie: []\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SEARCH_MOVIE:\n            return {\n                ...state,\n                text: action.payload,\n                loading: false\n            };\n        case FETCH_MOVIES:\n            return {\n                ...state,\n                movies: action.payload,\n                loading: false\n            };\n        case FETCH_MOVIE:\n            return {\n                ...state,\n                movie: action.payload,\n                loading: false\n            };\n        case LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport searchReducer from './searchReducer'\n\nexport default combineReducers({\n    movies : searchReducer\n})","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navbar from './component/layout/Navbar';\nimport Footer from './component/layout/Footer';\n\nimport Landing from './component/home/Landing';\nimport Movie from './component/home/Movie';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/movie/:id\" component={Movie} />\n            <br /><br />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}